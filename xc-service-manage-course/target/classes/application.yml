server:
  port: 31200
spring:
  application:
    name: xc-service-manage-course
  data:
    mongodb:
      uri:  mongodb://root:123@localhost:27017
      database: xc_cms
  datasource:
    druid:
      url: jdbc:mysql://localhost:3306/xc_course?characterEncoding=utf-8
      username: root
      password: root
      driverClassName: com.mysql.jdbc.Driver
      initialSize: 5  #初始建立连接数量
      minIdle: 5  #最小连接数量
      maxActive: 20 #最大连接数量
      maxWait: 10000  #获取连接最大等待时间，毫秒
      testOnBorrow: true #申请连接时检测连接是否有效
      testOnReturn: false #归还连接时检测连接是否有效
      timeBetweenEvictionRunsMillis: 60000 #配置间隔检测连接是否有效的时间（单位是毫秒）
      minEvictableIdleTimeMillis: 300000  #连接在连接池的最小生存时间（毫秒）
  freemarker:
    cache: false  #关闭模板缓存，方便测试
    settings:
      template_update_delay: 0
pagehelper:
  helper-dialect: mysql
eureka:
  client:
    register-with-eureka: true  #服务注册开关
    fetch-registry: true        #服务发现开关
    service-url:                #Eureka客户端与Eureka服务端进行交互的地址，多个中间用逗号分隔
      defaultZone: ${EUREKA_SERVER:http://eureka01:50101/eureka/,http:eureka02:50102/eureka/}
  instance:
    prefer-ip-address: true     #将自己的ip地址注册到Eureka服务中
    ip-address: ${IP_ADDRESS:127.0.0.1}
    instance-id: ${spring.application.name}:${server.port}  #指定实例id
ribbon:
  MaxAutoRetries: 2 #最大充实次数，当Eureka中可以找到服务但是服务连接不上时将会重试
  MaxAutoRetriesNextServer: 3 #切换实例重试次数
  QkToRetryOnAllOperations: false #对所有操作请求都进行重试，如果是get则可以，如果是post,put等操作没有实现幂等情况下是很危险的，所以设置为false
  ConnectionTimeout: 5000 #请求连接超时时间
  ReadTimeout: 6000 #请求处理超时的时间
course‐publish:
  siteId: 5fb1dfae44639a36449dc6ad
  templateId: 5ad9a24d68db5239b8fef199
  previewUrl: http://www.xuecheng.com/cms/preview/
  pageWebPath: /course/detail/
  pagePhysicalPath: /course/detail/
  dataUrlPre: http://localhost:31200/course/courseview/